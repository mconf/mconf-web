- candidate = @join_request.candidate
- introducer = @join_request.introducer
- is_introducer = introducer == current_user
- is_candidate = candidate == current_user
- is_other = !is_introducer && !is_candidate

= content_for :sidebar do
  - if @space.users.include?(current_user)
    - spaces_menu_at :users
    = render 'spaces/sidebar', space: @space, full: false
  - else
    - home_sidebar_menu_at(:spaces)
    = render "my/sidebar", user_spaces: @user_spaces

#join-requests-show

  - if @join_request.is_invite?
    - if is_introducer
      .header-title= t('.is_introducer.title_header_invitation')
      %h3= t('.is_introducer.title_invitation', candidate: candidate.full_name, space: @space.name, date: l(@join_request.created_at.to_date, :format => :long))
      - comment_text = t('.is_introducer.comment_invitation')
    - elsif is_candidate
      .header-title= t('.is_candidate.title_header_invitation')
      %h3= t('.is_candidate.title_invitation', introducer: introducer.full_name, space: @space.name, date: l(@join_request.created_at.to_date, :format => :long))
      - comment_text = t('.is_candidate.comment_invitation', name: introducer.full_name)
    - else
      .header-title= t('.is_other.title_header_invitation')
      %h3= t('.is_other.title_invitation', introducer: introducer.full_name, candidate: candidate.full_name, space: @space.name, date: l(@join_request.created_at.to_date, :format => :long))
      - comment_text = t('.is_candidate.comment_invitation', name: introducer.full_name)

  - elsif @join_request.is_request?
    - if is_candidate
      .header-title= t('.is_candidate.title_header_request')
      %h3= t('.is_candidate.title_request', space: @space.name, date: l(@join_request.created_at.to_date, :format => :long))
      - comment_text = t('.is_candidate.comment_request')
    - else
      .header-title= t('.is_other.title_header_request')
      %h3= t('.is_other.title_request', candidate: candidate.full_name, space: @space.name, date: l(@join_request.created_at.to_date, :format => :long))
      - comment_text = t('.is_other.comment_request', name: candidate.full_name)

  - unless @join_request.comment.blank?
    .invitation-comment
      = comment_text
      .content= @join_request.comment

#action-buttons

  - if @join_request.processed?
    = t('.already_accepted')

  - else
    - if @join_request.is_invite?

      - if can?(:accept, @join_request)
        .option-accept
          = link_to t('.accept'), accept_space_join_request_path(@space, @join_request), :method => :post, :class => 'btn btn-success'

      - if can?(:decline, @join_request)
        .option-decline
          - if is_candidate
            - text = t('.decline')
            - confirm_text = t('.decline_invite_confirmation')
          - else
            - text = t('.cancel_invite')
            - confirm_text = t('.cancel_invite_confirmation')
          = link_to text, decline_space_join_request_path(@space, @join_request), :data => { :confirm => confirm_text }, :method => :post, :class => 'btn btn-danger'

    - elsif @join_request.is_request?

      - if can?(:decline, @join_request)
        .option-decline
          - if is_candidate
            - text = t('.cancel_request')
            - confirm_text = t('.cancel_request_confirmation')
          - else
            - text = t('.decline')
            - confirm_text = t('.decline_request_confirmation')
          = link_to text, decline_space_join_request_path(@space, @join_request), :data => { :confirm => confirm_text }, :method => :post, :class => 'btn btn-danger'


      - if can?(:accept, @join_request)
        .option-accept
          -# if true it's a regular user accepting a request
          -# this second clause is here because of global admins which can chose to accept themselves
          - if is_candidate && cannot?(:manage_join_requests, @space)
            = link_to t('.accept'), accept_space_join_request_path(@space, @join_request), :method => :post, :class => 'btn btn-success'
          - else
            = simple_form_for [@space, @join_request], url: accept_space_join_request_path(@space, @join_request), method: :post do |f|
              = f.submit t('_other.accept'), :class => "btn btn-success btn-small"
              %span= t('join_requests.index.accept_as').downcase
              - roles = Space.roles.map { |r| [ r.translated_name, r.id ] }
              = select :join_request, :role_id, roles, :selected => default_role.id
